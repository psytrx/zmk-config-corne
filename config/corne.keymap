#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        qw-escape {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        fg-tab {
            bindings = <&kp TAB>;
            key-positions = <17 16>;
        };
    };

    behaviors {
        layer_dance: layer_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&mo 2>, <&tog 3>;
        };

        nb_plus_minus: nb_plus_minus {
            compatible = "zmk,behavior-tap-dance";
            label = "NB_PLUS_MINUS";
            #binding-cells = <0>;
            bindings = <&kp KP_PLUS>, <&kp KP_MINUS>;
        };

        nb_mul_div: nb_mul_div {
            compatible = "zmk,behavior-tap-dance";
            label = "NB_MUL_DIV";
            #binding-cells = <0>;
            bindings = <&kp KP_MULTIPLY>, <&kp KP_DIVIDE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------
            // |      |  Q  |  W  |  E  |  R  |  T  |         |  Y  |  U   |  I  |  O  |  P  |      |
            // |      |  A  |  S  |  D  |  F  |  G  |         |  H  |  J   |  K  |  L  |  ;  |      |
            // |      |  Z  |  X  |  C  |  V  |  B  |         |  N  |  M   |  ,  |  .  |  /  |      |
            //
            //                      | GUI | LWR | SPC |     | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q  &kp W  &kp E      &kp R          &kp T        &kp Y         &kp U      &kp I      &kp O    &kp P     &none
&none  &kp A  &kp S  &kp D      &kp F          &kp G        &kp H         &kp J      &kp K      &kp L    &kp SEMI  &none
&none  &kp Z  &kp X  &kp C      &kp V          &kp B        &kp N         &kp M      &kp COMMA  &kp DOT  &kp FSLH  &none
                     &kp LCTRL  &kp BACKSPACE  &kp LSHFT    &layer_dance  &kp SPACE  &kp RCTRL
            >;
        };

        lower_layer {
            // -------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |         |  6  |  7  |  8  |  9  |  0  |      |
            // |      |     |     |     |     |     |         | LFT | DWN |  UP | RGT |     |      |
            // |      |     |     |     |     |     |         |     |     |     |     |     |      |
            //
            //                      | GUI |     | SPC |     | ENT |     | ALT |

            bindings = <
&none  &kp N1  &kp N2  &kp N3     &kp N4   &kp N5      &kp N6        &kp N7     &kp N8     &kp N9    &kp N0    &none
&none  &none   &none   &none      &none    &kp TAB     &kp RET       &kp LBRC   &kp RBRC   &kp LBKT  &kp RBKT  &none
&none  &kp LT  &kp GT  &none      &none    &kp ESC     &none         &none      &none      &none     &none     &none
                       &kp LCTRL  &kp DEL  &kp LGUI    &layer_dance  &kp SPACE  &kp RCTRL
            >;
        };

        raise_layer {
            // -------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |  %  |         |  ^  |  &  |  *  |  (  |  )  |      |
            // |      |     |     |     |     |     |         |  -  |  =  |  [  |  ]  |  \  |      |
            // |      |     |     |     |     |     |         |  _  |  +  |  {  |  }  | "|" |      |
            //
            //                      | GUI |     | SPC |     | ENT |     | ALT |

            bindings = <
&none  &kp EXCL  &kp AT     &kp HASH   &kp DLLR    &kp PRCNT    &kp CARET     &kp AMPS      &kp KP_MULTIPLY  &kp LPAR    &kp RPAR          &none
&none  &kp HOME  &kp PG_UP  &none      &none       &none        &kp LEFT      &kp DOWN      &kp UP           &kp RIGHT   &kp C_PLAY_PAUSE  &none
&none  &kp END   &kp PG_DN  &none      &none       &none        &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP     &kp C_PREV  &kp C_NEXT        &none
                            &kp LCTRL  &kp DELETE  &kp LALT     &layer_dance  &kp SPACE     &kp RCTRL
            >;
        };

        num_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &kp KP_N1        &kp KP_N1     &kp KP_N1  &nb_plus_minus  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_ENTER  &kp KP_N1        &kp KP_N1     &kp KP_N1  &nb_mul_div     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans        &kp KP_N1        &kp KP_N1     &kp KP_N1  &kp KP_EQUAL    &trans
                        &trans  &trans  &trans    &layer_dance  &kp KP_NUMBER_0  &kp KP_COMMA
            >;
        };
    };
};
